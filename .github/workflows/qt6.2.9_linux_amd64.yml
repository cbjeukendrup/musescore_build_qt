name: "Qt 6.2.9 - Linux - amd64"

on:
  workflow_dispatch:

jobs:
  build_qt:
    runs-on: ubuntu-20.04
    env:
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        run: |
          sudo apt-get update

          # Build tools
          sudo apt-get install -y cmake ninja-build

          # Dependencies
          sudo apt-get install -y \
            libfontconfig1-dev \
            libfreetype-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxext-dev \
            libxfixes-dev \
            libxi-dev \
            libxrender-dev \
            libxcb1-dev \
            libxcb-cursor-dev \
            libxcb-glx0-dev \
            libxcb-keysyms1-dev \
            libxcb-image0-dev \
            libxcb-shm0-dev \
            libxcb-icccm4-dev \
            libxcb-sync-dev \
            libxcb-xfixes0-dev \
            libxcb-shape0-dev \
            libxcb-randr0-dev \
            libxcb-render-util0-dev \
            libxcb-util-dev \
            libxcb-xinerama0-dev \
            libxcb-xkb-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev

          # Accessibility dependencies
          sudo apt-get install libatspi2.0-dev

          # Libclang for QDoc
          # (We don't need this, but GitHub Actions runners apparently contain a broken install, 
          # so we reinstall it to make the configure script happy)
          sudo apt-get install libclang-12-dev libclang-11-dev

          # OpenGL
          sudo apt-get install libopengl0 libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libglu1-mesa-dev

          # Vulkan
          sudo apt-get install libvulkan-dev

          # Wayland
          sudo apt-get install libwayland-dev

          # Gtk+
          sudo apt-get install libgtk-3-dev

          # Printer support
          sudo apt-get install libcups2-dev
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
      - name: Use sccache
        uses: mozilla-actions/sccache-action@v0.0.5
      - name: Download and unpack source
        run: |
          set -o pipefail
          QT_URL="https://download.qt.io/archive/qt/6.2/6.2.9/single/qt-everywhere-opensource-src-6.2.9.tar.xz"
          wget -q "${QT_URL}" -O - | tar xJvf -
      - name: Configure
        run: |
          mkdir build
          cd build
          
          # https://wiki.qt.io/Qt_6.2_Tools_and_Versions#Software_configurations_for_Qt_6.2.9
          ../qt-everywhere-src-6.2.9/configure \
            -prefix ../install \
            -release -force-debug-info -separate-debug-info -headersclean \
            -qt-libjpeg -qt-libpng -qt-pcre -qt-harfbuzz -qt-doubleconversion -no-libudev -bundled-xcb-xinput \
            -nomake examples \
            -submodules qt5compat,qtdeclarative,qtimageformats,qtmultimedia,qtnetworkauth,qtscxml,qtsvg,qttools,qttranslations,qtwebsockets,qtxmlpatterns,qtwayland \
            -- -DOpenGL_GL_PREFERENCE=LEGACY -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache
      - name: Build
        working-directory: ./build
        # env:
        #   NINJA_STATUS: "[%f/%t (%c/s avg %o/s); ETA: %W (%P)]   "
        run: |
          cmake --build . --parallel
      - name: Install
        working-directory: ./build
        run: |
          cmake --install .
      - name: Package
        working-directory: ./install
        run: |
          zip -r "../Qt-6.2.9-Linux-amd64.zip" .
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "Qt-6.2.9-Linux-amd64"
          path: "Qt-6.2.9-Linux-amd64.zip"
